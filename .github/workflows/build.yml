name: Build

on:
  workflow_dispatch:
  push:
    branches:
  pull_request:
    branches:

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          # ------- Windows build ----------
          - platform: StandaloneWindows64
            runner: windows-latest
            unity: 6000.1.8f1
          # ------- macOS build -----------
          - platform: StandaloneOSX
            runner: macos-latest
            unity: 6000.1.8f1
          # ------- WebGL build ----------
          - platform: WebGL
            runner: ubuntu-latest
            unity: 6000.1.8f1

    name: Build – ${{ matrix.platform }}
    runs-on: ${{ matrix.runner }}

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Cache Library folder
        uses: actions/cache@v3
        with:
          path: Library
          key: Library-${{ matrix.unity }}-${{ matrix.platform }}
          restore-keys: |
            Library-${{ matrix.unity }}-

      - name: Build project
        id: build
        uses: game-ci/unity-builder@v4.5.0
        env:
          UNITY_LICENSE:  ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL:    ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          unityVersion:   ${{ matrix.unity }}
          targetPlatform: ${{ matrix.platform }}
          customParameters: -scriptingBackend IL2CPP

      - name: Upload build
        uses: actions/upload-artifact@v4
        with:
          name: Build-${{ matrix.platform }}
          path: build/${{ matrix.platform }}/
          
      - name: Notify via Lark
        if: always()
        run: |
          node <<'EOF'
          const https = require('https');
          const url = process.env.LARK_WEBHOOK;
          const status = process.env.STATUS;
          const platform = process.env.PLATFORM;
          const commitMsg = process.env.COMMIT_MSG;
          const runUrl = process.env.RUN_URL;

          const message = status === "failure" ? "❌ Build failed" : "✅ Build succeeded";
          const data = JSON.stringify({
            msg_type: "text",
            content: {
              text: `${message} [${platform}] :: ${status}\n🧾 Commit: ${commitMsg}\n🔗 ${runUrl}`
            }
          });

          const req = https.request(url, {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' }
          });

          req.write(data);
          req.end();
          EOF
        env:
          STATUS: ${{ job.status }}
          PLATFORM: ${{ matrix.platform }}
          COMMIT_MSG: ${{ github.event.head_commit.message }}
          RUN_URL: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
          LARK_WEBHOOK: ${{ secrets.LARK_WEBHOOK }}
