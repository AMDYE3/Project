name: Build

on:
  workflow_dispatch:
  push:
    branches:
  pull_request:
    branches:

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          # ------- Windows build ----------
          - platform: StandaloneWindows64
            runner: windows-latest
            unity: 6000.1.8f1
          # ------- macOS build -----------
          - platform: StandaloneOSX
            runner: macos-latest
            unity: 6000.1.8f1
          # ------- WebGL build ----------
          - platform: WebGL
            runner: ubuntu-latest
            unity: 6000.1.8f1

    name: Build ‚Äì ${{ matrix.platform }}
    runs-on: ${{ matrix.runner }}

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Cache Library folder
        uses: actions/cache@v3
        with:
          path: Library
          key: Library-${{ matrix.unity }}-${{ matrix.platform }}
          restore-keys: |
            Library-${{ matrix.unity }}-

      - name: Build project
        id: build
        uses: game-ci/unity-builder@v4.5.0
        env:
          UNITY_LICENSE:  ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL:    ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          unityVersion:   ${{ matrix.unity }}
          targetPlatform: ${{ matrix.platform }}
          customParameters: -scriptingBackend IL2CPP

      - name: Upload build
        uses: actions/upload-artifact@v4
        with:
          name: Build-${{ matrix.platform }}
          path: build/${{ matrix.platform }}/
          
      - name: Notify via Lark
        if: always()  # run this even if build failed
        run: |
            STATUS="${{ job.status }}"
            PLATFORM="${{ matrix.platform }}"
            COMMIT_MSG="${{ github.event.head_commit.message }}"
            RUN_URL="https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
        
            if [ "$STATUS" == "failure" ]; then
              MESSAGE="‚ùå Build failed"
            else
              MESSAGE="‚úÖ Build succeeded"
            fi
            
            curl -X POST "${{ secrets.LARK_WEBHOOK }}" \
              -H "Content-Type: application/json" \
              -d @- <<EOF
            {
              "msg_type": "text",
              "content": {
                "text": "${MESSAGE} with status: *${STATUS}*.\nCommit: ${COMMIT_MSG}\nüîó ${RUN_URL}"
              }
            }
            EOF
